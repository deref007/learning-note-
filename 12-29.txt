python循环语句的学习：
重点学习for语句和while语句，for语句属于遍历循环，while语句属于当型循环
除了两个循环语句外，break、continue、与pass三个用于控制循环结构中的程序流向语句·
循环语句又可以成为重复结构，循环语句一般要用到条件判断，根据判断的返回值决定是否执行循环体

循环分为两种模式，一种是条件满足时执行循环体 这是当型循环，先判断条件，再决定是否执行循环体
                            另一种是先执行循环体，再判断执行循环的结果是否满足判断条件，满足条件时，再执行循环体
                             不满足条件时，不再执行循环体，这是直到型循环

python中主要有两种循环语句，即for和while

for：在python中相当于一个通用的序列迭代器，可以遍历任何有序序列，如str、list、tuple等，也可以遍历任何可迭代对象，如dict
python的for语句将遍历系列中的所有成员，遍历顺序为成员在系列中的顺序。
for语句不属于当型和直到型循环，它遍历序列对象内的元素，对每个元素执行一次循环体，循环的步数在程序开始执行时就已经指定，不属于条件判断
for-in基本语法格式：
for 变量 in序列：
      操作语句

while：while语句区别于for循环。while循环结构中包含条件判断式，是一种条件循环，属于当型循环
while语句最基本的形式包括一个位于顶部的布尔表达式，一个或多个属于while代码块的缩进语句，也可以在结尾处包含一个else代码块。
基本语法格式：
while 条件表达式：
      操作语句1
      操作语句2
条件表达式：接收布尔表达式，表示判断条件是否成立，无默认值
操作语句：接收操作语句，表示执行一段代码，

shell、cmd、dos和脚本语言区别于联系：
操作系统可以分为核心(kernel)和shell(外壳)两部分
cmd可以成为命令行shell，dos是操作系统。cmd属于windows系统的一部分，dos本身就是一个系统，在dos
系统下可以删除、修复windows系统，而cmd下则不行。
linux下的shell，是一种命令解析器，管理你与操作系统的交互。包括等待你输入，向操作系统解释你的输入，并且处理各种各样的操作系统输出结果
不同系统有不同的shell，如bash、windows power shell。在linux系统中，通常是bash
脚本语言和普通的编程语言的不同：编程语言是编写-编译-链接-运行，脚本语言是解释-执行而非编译，脚本语言的程序代码即时最终的可执行文件，通过对应的
解释器解释执行即可，每种脚本语言都需要其对应的解释器。如python ruby javascript等，脚本也属于一种比较特殊的脚本语言。
linux shell=bash
windows = cmd =windows下的window power shell

shell入门核心教程：
1、变量：
shell是弱类型语言，所以不需要使用类型限定，并且变量可以修改类型。
echo：为打印到控制台的作用
$是取值的意思
$#:获取参数个数

表达式：let=(())

字符串比较：=
-lt (less than) 小于 -le(less equal)小于等于
-eq(equal)等于 -gt(greater than) 大于
-ge(greater equal)大于等于 -ne(not equal) 不等于
-r 有读的权限 -w 有写的权限 -x 有执行的权限 -f文件存在并且是常规的文件 -e 文件存在 -d文件存在并是目录
-n 判断是否为空

流程控制;
1、for ((i =0;i<10;i++))
do 
    echo $i
done
2、for i in 1 2 3 4
do
    echo $i
done

3、 while ls / etc;
do
    echo ok
done

CMD中的循环语句教程
语法格式：for [参数] %%变量名 in (相关文件或命令）do zhi执行的命令
作用：对一个或一组文件，字符串或命令结果中的每一个对象执行特定的命令
注意：在处理时文件使用for命令时，指定变量请使用%%variable 变量名称区分大小写
eg：
for %%i in (1,1,5) do @echo %%i 

